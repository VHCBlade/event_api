import 'dart:convert';

import 'package:event_db/event_db.dart';
import 'package:http/http.dart';

/// Adds functions to [StreamedResponse] to make it easier to work with.
extension FutureResponse on StreamedResponse {
  /// Returns the body as a future rather than as a stream. Can only be called
  /// once along with all the other body commands.
  Future<String> get body async => (await stream.toStringStream().toList())
      .reduce((value, element) => '$value$element');

  /// Returns the body as a future rather than as a stream. Can only be called
  /// once along with all the other body commands.
  ///
  /// This also automatically casts the [body] into a JSONObject map
  Future<Map<String, dynamic>> get bodyAsMap async =>
      json.decode(await body) as Map<String, dynamic>;

  /// Returns the body as a future rather than as a stream. Can only be called
  /// once along with all the other body commands.
  ///
  /// This also automatically transforms the [body] into the model [T]. The
  /// isntance is generated by [supplier].
  Future<T> bodyAsModel<T extends GenericModel>(T Function() supplier) async =>
      supplier()..loadFromJsonString(await body);
}
